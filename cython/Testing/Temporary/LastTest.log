Start testing: Oct 23 17:41 BST
----------------------------------------------------------
1/7 Testing: periodic_cubical_complex_barcode_persistence_from_perseus_file_example_py_test
1/7 Test: periodic_cubical_complex_barcode_persistence_from_perseus_file_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/periodic_cubical_complex_barcode_persistence_from_perseus_file_example.py" "--no-barcode" "-f" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/data/bitmap/CubicalTwoSphere.txt"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"periodic_cubical_complex_barcode_persistence_from_perseus_file_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
#####################################################################
PeriodicCubicalComplex creation
persistence(homology_coeff_field=3, min_persistence=0)=
[(2, (0.0, 100.0)), (0, (0.0, inf))]
betti_numbers()=
[1, 0, 0, 0]
<end of output>
Test time =   0.59 sec
----------------------------------------------------------
Test Passed.
"periodic_cubical_complex_barcode_persistence_from_perseus_file_example_py_test" end time: Oct 23 17:41 BST
"periodic_cubical_complex_barcode_persistence_from_perseus_file_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

2/7 Testing: random_cubical_complex_persistence_example_py_test
2/7 Test: random_cubical_complex_persistence_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/random_cubical_complex_persistence_example.py" "10" "10" "10"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"random_cubical_complex_persistence_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
#####################################################################
CubicalComplex creation
persistence(homology_coeff_field=2, min_persistence=0)=
[(2, (0.26464449755679775, 0.9169729272000005)), (2, (0.47755686008031195, 0.9903484068416386)), (2, (0.4870912180811373, 0.9153555879152419)), (2, (0.5355304399243486, 0.9184648807405301)), (2, (0.4361722803329736, 0.8176428096577472)), (2, (0.4718926446328576, 0.8352808608758449)), (2, (0.4262896994334613, 0.7843242940393426)), (2, (0.5342720152479808, 0.8826632683928295)), (2, (0.5419985122163216, 0.8704083546952646)), (2, (0.6493066710480351, 0.9755418471067708)), (2, (0.567407647328955, 0.8906774932698434)), (2, (0.5468441931656792, 0.8695116348146372)), (2, (0.664639821792643, 0.981813309674519)), (2, (0.6051013091139203, 0.9198333005308882)), (2, (0.606291314864518, 0.9194785899498611)), (2, (0.6493066710480351, 0.9547426995934073)), (2, (0.6568532340466944, 0.9558610464078098)), (2, (0.6963322237341412, 0.9930262383381403)), (2, (0.606291314864518, 0.8928052128348583)), (2, (0.6561329419266589, 0.9391524383470625)), (2, (0.670458479256098, 0.9523663156613551)), (2, (0.6208671671173382, 0.8893796295751457)), (2, (0.6309506748433605, 0.8914511011321414)), (2, (0.6493066710480351, 0.9091216715416716)), (2, (0.7143886763942675, 0.9738620086976715)), (2, (0.4492764014203493, 0.7067732053639431)), (2, (0.7497205060317835, 0.9950163991099035)), (2, (0.5298082624132032, 0.7663727686305138)), (2, (0.7717767565478323, 0.997971124899363)), (2, (0.7673762039407643, 0.9543464393871204)), (2, (0.7745136668711847, 0.9546079332091167)), (2, (0.6023444691730889, 0.779574528032075)), (2, (0.673104090273182, 0.8327250894559964)), (2, (0.7745136668711847, 0.933816656413406)), (2, (0.717561602831824, 0.869724406174502)), (2, (0.7751720380710366, 0.926432179559801)), (2, (0.5005918593814015, 0.6454328765290316)), (2, (0.7563330134657578, 0.9007595845058305)), (2, (0.8018767750101593, 0.9392133911284726)), (2, (0.841021099016314, 0.977478895533078)), (2, (0.6907713617435236, 0.8229550397990247)), (2, (0.2554982620204346, 0.38268195517797)), (2, (0.6505708829107254, 0.7760788719772733)), (2, (0.8753215553475537, 0.9960115223988322)), (2, (0.7669874313332218, 0.8834804884732208)), (2, (0.7826404002609769, 0.8950170026793167)), (2, (0.7484430923010659, 0.8605004236521305)), (2, (0.8018767750101593, 0.9108483666136887)), (2, (0.6907713617435236, 0.7952367534266229)), (2, (0.5541566347950279, 0.6572684289383625)), (2, (0.6309506748433605, 0.7334159563357121)), (2, (0.6965570279363275, 0.7955829584607138)), (2, (0.8546174906331805, 0.9485025379412314)), (2, (0.870995436877366, 0.954791219697508)), (2, (0.8470340081099206, 0.9200259963807353)), (2, (0.889767367391106, 0.9615086999821171)), (2, (0.7256304256824861, 0.7970917538450418)), (2, (0.817062289027122, 0.8877886403775251)), (2, (0.7549011192926334, 0.8241834188038725)), (2, (0.921920041845222, 0.9883399274305035)), (2, (0.7966403018542366, 0.8613974993637198)), (2, (0.8546174906331805, 0.9189127166595749)), (2, (0.8244602189953433, 0.8701069342232363)), (2, (0.7563330134657578, 0.8000828935680587)), (2, (0.5154850458834502, 0.5560255655503039)), (2, (0.8651351069475299, 0.9015604475752338)), (2, (0.7261435006950955, 0.7591578357913324)), (2, (0.7517298162932472, 0.7810793012819024)), (2, (0.9650128910398019, 0.9927019145662439)), (2, (0.8031709558581762, 0.8307318978037086)), (2, (0.5468441931656792, 0.5724420985284089)), (2, (0.8367560102446999, 0.8420419947473073)), (1, (0.2620754054644673, 0.7625950164342686)), (1, (0.12064357912091295, 0.6150297841365567)), (1, (0.18745103761355886, 0.6746424834599726)), (1, (0.2855124004835232, 0.7535625593004257)), (1, (0.1929245949732078, 0.6485147711649557)), (1, (0.08905462332250735, 0.5375657423614074)), (1, (0.12444670198665042, 0.5655972036300342)), (1, (0.20601520525360972, 0.6399789414166323)), (1, (0.13721464261164185, 0.571019831259182)), (1, (0.3637019108236097, 0.7954470611290356)), (1, (0.22225598056813534, 0.6462281548038551)), (1, (0.17485907623535557, 0.5963366775859029)), (1, (0.1965420617678617, 0.6172918503074903)), (1, (0.18840360166103765, 0.6057194751198144)), (1, (0.27371878082484424, 0.6850871541484881)), (1, (0.17692600487815624, 0.5799996611825396)), (1, (0.27663491606898727, 0.673104090273182)), (1, (0.13522931258620852, 0.5161567428197684)), (1, (0.20579243529683866, 0.580979624225907)), (1, (0.23323039164558323, 0.6082345613948822)), (1, (0.21275817110853334, 0.5819931508367732)), (1, (0.27371878082484424, 0.6400813289760251)), (1, (0.18332149315342272, 0.5466904821935337)), (1, (0.23258158302262033, 0.5928607314937696)), (1, (0.2432520952544457, 0.6011815841295425)), (1, (0.3388054829095434, 0.6965570279363275)), (1, (0.18332149315342272, 0.5387262035428693)), (1, (0.16239549024860955, 0.5154850458834502)), (1, (0.14995113246880354, 0.5024111878197172)), (1, (0.2914078398084594, 0.6400813289760251)), (1, (0.06914254390397911, 0.4112146105422342)), (1, (0.3505623481061315, 0.6852257170559606)), (1, (0.4224261272108003, 0.7535625593004257)), (1, (0.09048737675756613, 0.4112146105422342)), (1, (0.17478447627443183, 0.4886462038275001)), (1, (0.16197049283915932, 0.4741159577923555)), (1, (0.17692600487815624, 0.48607289464347025)), (1, (0.15555221013340292, 0.4601991965433466)), (1, (0.5864049469946309, 0.8854165983969257)), (1, (0.42807199024653997, 0.7256304256824861)), (1, (0.2687764836004043, 0.5577208208345641)), (1, (0.26991659552655434, 0.5518941463828625)), (1, (0.12064357912091295, 0.40240908576030754)), (1, (0.1713309276782632, 0.45241363248962974)), (1, (0.27663491606898727, 0.5516963476490184)), (1, (0.21380915671064848, 0.4861235345705296)), (1, (0.1272021029175342, 0.3971680885138513)), (1, (0.16197049283915932, 0.4262896994334613)), (1, (0.34189844566530136, 0.5949835649348592)), (1, (0.2340967776854599, 0.4825377514435476)), (1, (0.1745755000162601, 0.4222994155909504)), (1, (0.2892149753851677, 0.5333223272335856)), (1, (0.41834294449593, 0.6622256081318374)), (1, (0.4004350787348103, 0.6398134985061711)), (1, (0.07195467091324936, 0.30882783270693503)), (1, (0.2322654897054287, 0.4640513695587295)), (1, (0.1496230321754779, 0.37963116401260544)), (1, (0.15541140547037213, 0.3850265696452856)), (1, (0.5275496026767952, 0.7509777823301816)), (1, (0.5330938986073327, 0.7484430923010659)), (1, (0.21839436341569862, 0.4284866892898054)), (1, (0.282474842473199, 0.49051386503626837)), (1, (0.33630307078557253, 0.5440899988158553)), (1, (0.2140135447297099, 0.4157703576614774)), (1, (0.29997793625396874, 0.5005918593814015)), (1, (0.29997793625396874, 0.5005918593814015)), (1, (0.19857553721024201, 0.39733835969142184)), (1, (0.3505623481061315, 0.5466904821935337)), (1, (0.24023667945325222, 0.4361722803329736)), (1, (0.18745103761355886, 0.3796509545075384)), (1, (0.18414424061282375, 0.37373614008677036)), (1, (0.21377307842630366, 0.40223828562531205)), (1, (0.20030813415734172, 0.3864852254089828)), (1, (0.3037941015822435, 0.4731949292640467)), (1, (0.21389082236203205, 0.37798533627340236)), (1, (0.4206035005007225, 0.5759514574541252)), (1, (0.1949262223174255, 0.34414564909656276)), (1, (0.1965420617678617, 0.34530376099444926)), (1, (0.1975420133449689, 0.34530376099444926)), (1, (0.0834892803916778, 0.22454545226527356)), (1, (0.44287542990971107, 0.5785082813199945)), (1, (0.17764158773201366, 0.3116411802970992)), (1, (0.08367468745541784, 0.21608167203458295)), (1, (0.5944304801996183, 0.717561602831824)), (1, (0.3442847176375188, 0.4663412462114762)), (1, (0.3551314363441562, 0.47484216617742103)), (1, (0.31498748577947266, 0.43273225719846464)), (1, (0.28600277819596653, 0.4034211021927774)), (1, (0.2828357630307333, 0.39733835969142184)), (1, (0.27663491606898727, 0.3825831575497839)), (1, (0.09378703438714242, 0.1965420617678617)), (1, (0.3863770621369589, 0.48812614609234284)), (1, (0.7537662389131997, 0.848423293911974)), (1, (0.6020012084410439, 0.6903096056354433)), (1, (0.2936175733416022, 0.37399826538984515)), (1, (0.17001356343592566, 0.2444035889186157)), (1, (0.29997793625396874, 0.3737779339688101)), (1, (0.3167600828558925, 0.3864852254089828)), (1, (0.24754613135334314, 0.31721669672343666)), (1, (0.25351176004441367, 0.3220850947830399)), (1, (0.6893629728008833, 0.7563330134657578)), (1, (0.31721669672343666, 0.3825831575497839)), (1, (0.19857553721024201, 0.2606345003806896)), (1, (0.24685455467281825, 0.30882783270693503)), (1, (0.6072573838984516, 0.6683105018602463)), (1, (0.22238945225931972, 0.282474842473199)), (1, (0.31721669672343666, 0.3737779339688101)), (1, (0.41133464792049934, 0.4663412462114762)), (1, (0.1022153928206262, 0.1570805783315683)), (1, (0.45337523298208804, 0.5078343845406652)), (1, (0.2140135447297099, 0.2674584406927806)), (1, (0.27901332697133396, 0.3322716151318017)), (1, (0.6894885180224954, 0.7406563649520239)), (1, (0.2766497432205045, 0.32561158350299213)), (1, (0.28316645311351285, 0.3300811700685986)), (1, (0.5927687493027761, 0.6331572582927082)), (1, (0.17431776235835883, 0.21389082236203205)), (1, (0.15555221013340292, 0.19379872915541763)), (1, (0.6496387150640225, 0.6840830363559984)), (1, (0.45337523298208804, 0.4861235345705296)), (1, (0.442863806147724, 0.47505600998409503)), (1, (0.45480008960678175, 0.48607289464347025)), (1, (0.28600277819596653, 0.3167600828558925)), (1, (0.30002960076086416, 0.3300613974139316)), (1, (0.21380915671064848, 0.2385928083015989)), (1, (0.5571408294196386, 0.5802250256540297)), (1, (0.422270847045637, 0.44504927275646544)), (1, (0.422270847045637, 0.44504927275646544)), (1, (0.3037941015822435, 0.3256556484833537)), (1, (0.5440133885780567, 0.5655972036300342)), (1, (0.2620754054644673, 0.2712397147205263)), (1, (0.6082345613948822, 0.6168313579489961)), (0, (0.0024812890394587672, inf)), (0, (0.023220192768932835, 0.30002960076086416)), (0, (0.07607945924070258, 0.3307951289873615)), (0, (0.031709191243051715, 0.2558317764084972)), (0, (0.013947004662329343, 0.20030813415734172)), (0, (0.02576350209723488, 0.19517444207749757)), (0, (0.03201353540815788, 0.1965420617678617)), (0, (0.09598604903326058, 0.24992123480033746)), (0, (0.1367312218539567, 0.2558317764084972)), (0, (0.009164641195049561, 0.12727180641254965)), (0, (0.008174279569093001, 0.11715228745940476)), (0, (0.01418739969799876, 0.12266899566645317)), (0, (0.004100049225619351, 0.10727197792770904)), (0, (0.008278749597690038, 0.11117533440433547)), (0, (0.02891246616649612, 0.12727180641254965)), (0, (0.006122773938571857, 0.10365035837277115)), (0, (0.004736808445326979, 0.1022153928206262)), (0, (0.006759136831278267, 0.1022153928206262)), (0, (0.018685479675346395, 0.10727197792770904)), (0, (0.005053641161485101, 0.0906190793705961)), (0, (0.015144581411791203, 0.09781488723987819)), (0, (0.030978022313459475, 0.10236373615060956)), (0, (0.0051734391572538785, 0.07633202909323922)), (0, (0.04817202306058621, 0.11715228745940476)), (0, (0.2373257720178208, 0.3020361224051865)), (0, (0.09030063553486334, 0.1390341716199629)), (0, (0.06359918792188102, 0.11097981121716793)), (0, (0.046406776817171425, 0.09134032794615954)), (0, (0.03209084490894343, 0.07633202909323922)), (0, (0.04489664254955472, 0.0876230179273958)), (0, (0.035635997038934275, 0.0781601826774575)), (0, (0.04870499155952113, 0.08760646190365273)), (0, (0.011762072077507013, 0.04901843339977252)), (0, (0.02879524277196832, 0.060844244956415494)), (0, (0.22951362357941774, 0.2581115102569199)), (0, (0.0031883256022143813, 0.027014979364697544)), (0, (0.10631095958321146, 0.12723394580165348)), (0, (0.1741860638024577, 0.195049456261702)), (0, (0.03270836098874097, 0.053132447854250864)), (0, (0.046067453851521445, 0.06278442025497843)), (0, (0.1813754791334331, 0.19625464908411572)), (0, (0.15796500005041125, 0.17001356343592566)), (0, (0.02792958630291742, 0.03836213070725747)), (0, (0.07537061583390536, 0.08367468745541784)), (0, (0.04940638079584381, 0.055017655185573444)), (0, (0.010241047417862692, 0.014477008271435943)), (0, (0.06809742861040347, 0.0700034236662056)), (0, (0.17434679652888752, 0.17575103914194212))]
betti_numbers()=
[1, 0, 0, 0]
<end of output>
Test time =   0.40 sec
----------------------------------------------------------
Test Passed.
"random_cubical_complex_persistence_example_py_test" end time: Oct 23 17:41 BST
"random_cubical_complex_persistence_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

3/7 Testing: rips_complex_diagram_persistence_from_distance_matrix_file_example_py_test
3/7 Test: rips_complex_diagram_persistence_from_distance_matrix_file_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/rips_complex_diagram_persistence_from_distance_matrix_file_example.py" "--no-diagram" "-f" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/data/distance_matrix/lower_triangular_distance_matrix.csv" "-e" "12.0" "-d" "3"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"rips_complex_diagram_persistence_from_distance_matrix_file_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
Child aborted
<end of output>
Test time =   0.48 sec
----------------------------------------------------------
Test Failed.
"rips_complex_diagram_persistence_from_distance_matrix_file_example_py_test" end time: Oct 23 17:41 BST
"rips_complex_diagram_persistence_from_distance_matrix_file_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

4/7 Testing: rips_complex_diagram_persistence_from_off_file_example_py_test
4/7 Test: rips_complex_diagram_persistence_from_off_file_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/rips_complex_diagram_persistence_from_off_file_example.py" "--no-diagram" "-f" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/data/points/tore3D_300.off" "-e" "0.25" "-d" "3"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"rips_complex_diagram_persistence_from_off_file_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
#####################################################################
RipsComplex creation from points read in a OFF file
RipsComplex with max_edge_length=0.25
Number of simplices=455
betti_numbers()=
[187, 0, 0]
<end of output>
Test time =   0.39 sec
----------------------------------------------------------
Test Passed.
"rips_complex_diagram_persistence_from_off_file_example_py_test" end time: Oct 23 17:41 BST
"rips_complex_diagram_persistence_from_off_file_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

5/7 Testing: rips_complex_from_points_example_py_test
5/7 Test: rips_complex_from_points_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/rips_complex_from_points_example.py"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"rips_complex_from_points_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
0 
1 0 
2 0 
3 0 
1 0 
2 0 
3 0 
#####################################################################
RipsComplex creation from points
filtrations= [([0], 0.0), ([1], 0.0), ([2], 0.0), ([3], 0.0), ([0, 1], 1.0), ([0, 2], 1.0), ([1, 3], 1.0), ([2, 3], 1.0), ([1, 2], 1.4142135623730951), ([0, 3], 1.4142135623730951)]
star([0])= [([0], 0.0), ([0, 1], 1.0), ([0, 2], 1.0), ([0, 3], 1.4142135623730951)]
coface([0], 1)= [([0, 1], 1.0), ([0, 2], 1.0), ([0, 3], 1.4142135623730951)]
<end of output>
Test time =   0.40 sec
----------------------------------------------------------
Test Passed.
"rips_complex_from_points_example_py_test" end time: Oct 23 17:41 BST
"rips_complex_from_points_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

6/7 Testing: simplex_tree_example_py_test
6/7 Test: simplex_tree_example_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/simplex_tree_example.py"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"simplex_tree_example_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
#####################################################################
SimplexTree creation from insertion
Inserted !!
Found !!
Inserted !!
dimension= 2
filtration= [([0], 0.0), ([1], 0.0), ([0, 1], 0.0), ([2], 4.0), ([0, 2], 4.0), ([1, 2], 4.0), ([0, 1, 2], 4.0)]
filtration[1, 2]= 4.0
filtration[4, 2]= inf
num_simplices= 7
num_vertices= 3
skeleton[2]= [([0, 1, 2], 4.0), ([0, 1], 0.0), ([0, 2], 4.0), ([0], 0.0), ([1, 2], 4.0), ([1], 0.0), ([2], 4.0)]
skeleton[1]= [([0, 1], 0.0), ([0, 2], 4.0), ([0], 0.0), ([1, 2], 4.0), ([1], 0.0), ([2], 4.0)]
skeleton[0]= [([0], 0.0), ([1], 0.0), ([2], 4.0)]
<end of output>
Test time =   0.37 sec
----------------------------------------------------------
Test Passed.
"simplex_tree_example_py_test" end time: Oct 23 17:41 BST
"simplex_tree_example_py_test" time elapsed: 00:00:00
----------------------------------------------------------

7/7 Testing: witness_complex_from_nearest_landmark_table_py_test
7/7 Test: witness_complex_from_nearest_landmark_table_py_test
Command: "/usr/bin/cmake" "-E" "env" "PYTHONPATH=/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython" "/homes/rhu/Documents/phd_projects/kernelgformula/g_env/bin/python" "/homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/cython/example/witness_complex_from_nearest_landmark_table.py"
Directory: /homes/rhu/Documents/phd_projects/TdaToolbox/2018-09-04-14-25-00_GUDHI_2.3.0/build/cython
"witness_complex_from_nearest_landmark_table_py_test" start time: Oct 23 17:41 BST
Output:
----------------------------------------------------------
#####################################################################
WitnessComplex creation from nearest landmark table
Number of simplices: 31
[(3, (3.0, 4.0)), (2, (3.0, 3.0)), (2, (3.0, 3.0)), (2, (3.0, 3.0)), (2, (3.0, 3.0)), (1, (1.0, 3.0)), (1, (2.0, 2.0)), (1, (2.0, 2.0)), (1, (2.0, 2.0)), (1, (2.0, 2.0)), (1, (2.0, 2.0)), (0, (0.0, inf)), (0, (0.0, 1.0)), (0, (0.0, 1.0)), (0, (0.0, 1.0)), (0, (0.0, 1.0))]
<end of output>
Test time =   0.34 sec
----------------------------------------------------------
Test Passed.
"witness_complex_from_nearest_landmark_table_py_test" end time: Oct 23 17:41 BST
"witness_complex_from_nearest_landmark_table_py_test" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Oct 23 17:41 BST
